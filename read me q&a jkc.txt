Read me 
https://youtu.be/J3CO27ZrOvI 


You must first construct these keys and save them in notes or another suitable location.
OPENAI_API_KEY = "YOUR_OPENAI_API_KEY"
YOUR OPENAI ORG KEY = "YOUR_PINECONE_API_KEY"
PINECONE_API_KEY="YOUR_PINECONE_API_KEY"
PINECONE_ENV="Your_environment"


Links below
https://platform.openai.com/docs/quickstart/build-your-application (openai)
https://platform.openai.com/account/org-settings (org)
https://app.pinecone.io/organizations/-NUAvM0uzck1UzegjmaA/projects/us-west1-gcp-free:3ecb32f/keys (pinecone)


PREREQUISITES:
1. Walk through the quickstart tutorial
https://platform.openai.com/docs/quickstart
In this step, you should install Python with a version in between 
version 7 to version 10.  OpSet up a Pinecone API key and index name. 
You can create a new account and index here: https://www.pinecone.io/

For Index, select "FROM COLLECTION" and pick NEW
index_name="ee104"
Dimensions=1536, Metric=Cosine, Pod Type= S1
then click the button "CREATE INDEX"

Get your Pinecone API key from the left panel of the page (something similar to 
https://app.pinecone.io/organizations/-NPr_ukqWSKNUu3bvhuX/projects/us-west1-gcp:85a4c95/keys) 
Also remember your Environment (for example: us-west1-gcp)
PINECONE_API_KEY="YOUR_PINECONE_API_KEY"
PINECONE_ENVIRONMENT="Your_environment"
index_name="ee104"enAI has not run on Python version 11 yet 
as of March 3, 2023.
Run the Google Colab from the first Jupiter cell (!pip install pinecone-client openai datasets) to the cell before the last one. 

Do not run the last cell at the bottom of the Jupiter code because it will delete your index.



Feel free to look at the questions from the Jupiter cell query outputs, and replace the existing questions
with these questions to see similar questions generated by the output.

You are now done with the trial run.

--------------------------------------------------
5. Install npm from https://nodejs.org/en/download

To see if you already have Node.js and npm installed and check the installed version, run the following comman
node -v
npm -v Run the Google Colab from the first Jupiter cell (!pip install pinecone-client openai datasets) to the cell before the last one. 

Do not run the last cell at the bottom of the Jupiter code because it will delete your index.



Feel free to look at the questions from the Jupiter cell query outputs, and replace the existing questions
with these questions to see similar questions generated by the output.


You are now done with the trial run.

5. Install npm from https://nodejs.org/en/download

To see if you already have Node.js and npm installed and check the installed version, run the following comman
node -v
npm -v 



For SERVER side:

1.Go to the Server directory by changing directories. Something along these linesPS C:\openai-cookbook-main\apps\file-q-and-a\nextjs-with-flask-server\server

2. Provide your Pinecone API key, index name, and environment in the config.yaml file.

3.Run the following command in your PowerShell window:
pip install openai
npm install openai
python install virtualenv  python -m venv venv
.\venv\Scripts\activate
 pip install -r .\requirements.txt  
pip install python-dotenv
python .\app.py

4.If you did not got any error # You should now see the followings:

 * Serving Flask app 'app'
 * Debug mode: on
INFO:werkzeug:←[31m←[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.←[0m
 * Running on http://127.0.0.1:8080
INFO:werkzeug:Press CTRL+C to quit
INFO:werkzeug: * Restarting with stat
WARNING:dotenv.main:Python-dotenv could not parse statement starting at line 2
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 120-110-748





 CLIENT side 

1. Launch a fresh PowerShell tab
2. Perform a directory change to the CLIENT directory, such as this
PS C:\openai-cookbook-main\apps\file-q-and-a\nextjs-with-flask-server\client

pip install openai
npm install openai


3. Enter the following commands to set up Node dependencies:
install npm

4. Enter the following command to start the Next.js client:
npm run dev

5. to upgrade to the most recent npm version, you would want to do npm install -g npm@9.6.0

6.You ought to see something resembling this: 

> file-q-and-a@0.1.0 dev
> next dev

ready - started server on 0.0.0.0:3000, url: http://localhost:3000
event - compiled client and server successfully in 9.6s (166 modules)
wait  - compiling...
event - compiled successfully in 208 ms (133 modules)
wait  - compiling / (client and server)...
event - compiled client and server successfully in 2.7s (757 modules)
  
Go on to the following action.

Use your browser to access http://localhost:3000 to view the app.

1. submit a file
2. Look through the file looking for specific content. You ought to be able to achieve success.
 serve fill recived 
INFO:werkzeug:127.0.0.1 - - [07/May/2023 16:06:56] "POST /process_file HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [07/May/2023 16:18:44] "POST /process_file HTTP/1.1" 200 -